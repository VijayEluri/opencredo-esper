<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:esper="http://www.opencredo.com/schema/esper"
	xmlns:si-esper="http://www.opencredo.com/schema/esper/integration"
	xmlns:si="http://www.springframework.org/schema/integration"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						http://www.opencredo.com/schema/esper
						http://www.opencredo.com/schema/esper/opencredo-esper-1.0.xsd
						http://www.opencredo.com/schema/esper/integration
						http://www.opencredo.com/schema/esper/integration/opencredo-integration-esper-1.0.xsd
						http://www.springframework.org/schema/integration
						http://www.springframework.org/schema/integration/spring-integration-1.0.xsd">	
		
	<import resource="sample-integration-environment-config.xml"/>
	
	<si-esper:wire-tap id="wiretap" sourceId="testSource" template-ref="testTemplate" pre-send="true"/>
	
	<si-esper:wire-tap-channels default-wire-tap="wiretap">
		<si-esper:channel pattern="outgoingDomainEvents" />
	</si-esper:wire-tap-channels>
	
	<si:channel id="outgoingDomainEvents" />
	
	<esper:template id="testTemplate">
		<esper:statements>
			<esper:statement 
				epl="select * from org.opencredo.esper.sample.SampleEvent">
				<esper:listeners>
					<ref bean="testListener"/>
				</esper:listeners>
			</esper:statement>
		</esper:statements>
	</esper:template>
	
	<bean id="testListener" class="org.opencredo.esper.sample.CallRecordingListener" />
	
</beans>
