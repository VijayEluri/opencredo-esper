<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.opencredo.com/schema/esper"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:tool="http://www.springframework.org/schema/tool"
	targetNamespace="http://www.opencredo.com/schema/esper"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/tool" />
	
	<xsd:element name="template">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an Esper Template that encapsulates
					a number of statements and listeners.
        		</xsd:documentation>
        		<xsd:appinfo>
					<tool:annotation>
						<tool:exports type="org.opencredo.esper.EsperTemplate" />
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
			<xsd:sequence>
				<xsd:element name="statements" type="statementsType"
					minOccurs="0" maxOccurs="1" />
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:ID" />
			<xsd:attribute name="configuration" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The relative resource location of the XML (Esper Configuration) file to import,
						for example "myImport.xml" or "includes/myImport.xml" or "../myImport.xml".	
						For more information on what can go in an esper configuration file,
						see http://esper.codehaus.org/esper-3.3.0/doc/reference/en/html/configuration.html					
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="statement" type="statementType" />

	<xsd:complexType name="statementsType">
		<xsd:annotation>
			<xsd:documentation>
				Defines a list of statements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="statement" type="statementType"
					minOccurs="0" maxOccurs="unbounded" />
				<xsd:element name="ref">
					<xsd:complexType>
						<xsd:attribute name="bean" use="required">
							<xsd:annotation>
								<xsd:appinfo>
									<tool:annotation kind="ref">
										<tool:expected-type
											type="org.opencredo.esper.EsperStatement" />
									</tool:annotation>
								</xsd:appinfo>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="statementType">
		<xsd:annotation>
			<xsd:documentation>
				Defines an esper statement and the listener
				interested
				in that statement's results.
       		</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:sequence>
				<xsd:element name="listeners" type="listenerType"
					minOccurs="0" maxOccurs="1" />
			</xsd:sequence>
			<xsd:element name="subscriber">
				<xsd:complexType>
					<xsd:attribute name="ref" />
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="id" type="xsd:ID" />
		<xsd:attribute name="epl" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>
					The Event Processing Language (EPL) statement used to decide what and when
					to send an event to the registered listeners.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<!--<xsd:attribute name="ref">
			<xsd:annotation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type
							type="com.espertech.esper.client.UpdateListener" />
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	--></xsd:complexType>

	<xsd:complexType name="listenerType">
		<xsd:annotation>
			<xsd:documentation>
				Defines an esper listener interested
				in a
				statement's results.
       		</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="ref" >
					<xsd:complexType>
						<xsd:attribute name="bean" use="required">
							<xsd:annotation>
								<xsd:appinfo>
									<tool:annotation kind="ref">
										<tool:expected-type
											type="com.espertech.esper.client.UpdateListener" />
									</tool:annotation>
								</xsd:appinfo>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:any namespace="##other" processContents="strict" />
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<!--

		<property name="statements"> <bean
		class="com.opencredo.spring.integration.esper.EsperStatement">
		<constructor-arg value="select count(*) as throughput from
		com.ubs.sseng.concurrent.sample.domain.Event.win:time_batch(1
		second)"/> <property name="listeners"> <list> <ref
		bean="throughputMessagesInboundGateway"/> </list> </property> </bean>
		</property>
	-->

</xsd:schema>